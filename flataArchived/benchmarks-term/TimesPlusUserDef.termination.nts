nts Plus;


f {
  in x,y : int;
  out z : int;
  initial si;
  final sf;

  si -> s1 { havoc() }
  s1 -> s2 { y > 0 && havoc() }
//  s2 -> s3 { z' = f(x,y-1) }
  s2 -> si { x' = x && y'=y-1 && havoc(x,y) }
  s2 -> s3 { true }
//
  s3 -> sf { z' = z + 1 && havoc(z) }
  s1 -> s4 { y <= 0 && x > 0 && havoc() }
//  s4 -> s5 { z' = f(x-1,y) }
  s4 -> si { x' = x-1 && y'=y && havoc(x,y) }
  s4 -> s5 { true }
//
  s5 -> sf { z' = z + 1 && havoc(z) }
  s1 -> sf { y <= 0 && x <= 0 && z' = 0 && havoc(z) }
}



/*

public class TimesPlusUserDef {
	public static void main(String[] args) {
		int x, y;
		x = args[0].length();
		y = args[1].length();
		times(x, y);
	}

	public static int times(int x, int y) {
		if (y == 0)
			return 0;
		if (y > 0)
			return plus(times(x, y - 1), x);
		return 0;
	}

	public static int plus(int x, int y) {
		if (y > 0) {
			return 1 + plus(x, y-1);
		} else if (x > 0) {
			return 1 + plus(x-1, y);
		} else {
			return 0;
		}
	}
}

*/
