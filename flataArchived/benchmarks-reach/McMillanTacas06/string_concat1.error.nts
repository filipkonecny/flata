nts string_concat1;
 
main{

mid_6_base,mid_6_size,mid_5_base,mid_5_size,mid_4_base,mid_4_size,mid_3_base,mid_3_size,mid_2_base,mid_2_size,mid_1_base,mid_1_size,validity____retres_,validity__i_,validity__j_,validity__x_,validity__y_,validity__z_,__if_ndet_cond__,_ndet_arg_4,_ndet_arg_3,_ndet_arg_2,_ndet_arg_1,_ndet_arg_0,__retres,j,i : int ;

 out ret_val_, validity__ret_val__  : int;
initial sinit ;
final s36;
error s1,s7,s10,s12,s13,s14,s20,s23,s25,s26,s27,s29,s32,s33,s34; sinit->s0 { mid_4_size'=101*1 and mid_5_size'=101*1 and mid_1_size'=101*1 and mid_6_size'=201*1 and mid_2_size'=101*1 and mid_3_size'=201*1 } 
 s0->s2 { i'=0 and havoc(i) } 
 s2->s3 { havoc() } 
 s3->s4 { havoc() } 
 s4->s5 { not (i < 101 and i >= 0) and havoc() } 
 s4->s5 { __if_ndet_cond__ = 0 and (i < 101 and i >= 0) and havoc() } 
 s4->s6 { __if_ndet_cond__ != 0 and (i < 101 and i >= 0) and havoc() } 
 s5->s7 { not (i < 101 and i >= 0) and havoc() } 
 s5->s8 { (i < 201 and i >= 0) and (i < 101 and i >= 0) and havoc() } 
 s6->s9 { havoc() } 
 s8->s11 { i'=i+1 and havoc(i) } 
 s9->sinter0 { i >= 100 and havoc(_ndet_arg_1,_ndet_arg_2) } 
 sinter0->s13 { __assert_fail(_ndet_arg_0,1,_ndet_arg_1,1,19,1,_ndet_arg_2,1) and havoc() } 
 s9->s15 { i < 100 and j'=0 and havoc(j) } 
 s11->s3 { havoc() } 
 s15->s16 { havoc() } 
 s16->s17 { havoc() } 
 s17->s18 { not (j < 101 and j >= 0) and havoc() } 
 s17->s18 { __if_ndet_cond__ = 0 and (j < 101 and j >= 0) and havoc() } 
 s17->s19 { __if_ndet_cond__ != 0 and (j < 101 and j >= 0) and havoc() } 
 s18->s20 { not (j < 101 and j >= 0) and havoc() } 
 s18->s21 { (i < 201 and i >= 0) and (j < 101 and j >= 0) and havoc() } 
 s19->s22 { havoc() } 
 s21->s24 { i'=i+1 and havoc(i) } 
 s22->sinter1 { j >= 100 and havoc(_ndet_arg_1,_ndet_arg_2) } 
 sinter1->s26 { __assert_fail(_ndet_arg_0,1,_ndet_arg_1,1,33,1,_ndet_arg_2,1) and havoc() } 
 s22->s28 { j < 100 and j < 201 and j >= 0 and havoc() } 
 s24->s30 { j'=j+1 and havoc(j) } 
 s28->s31 { havoc() } 
 s30->s16 { havoc() } 
 s31->sinter2 { i >= 200 and havoc(_ndet_arg_1,_ndet_arg_2) } 
 sinter2->s33 { __assert_fail(_ndet_arg_0,1,_ndet_arg_1,1,38,1,_ndet_arg_2,1) and havoc() } 
 s31->s35 { i < 200 and __retres'=0 and havoc(__retres) } 
 s35->s36 { ret_val_'=__retres and havoc(ret_val_) }
}
__assert_fail{
in a,b,c,d,e,f,g,h : int;
initial sinit ;
error s0;
sinit->s0 { true and havoc() }
}



NonDetInt{
out ndet, validity_ndet_: int;
initial sinit;
final s1;

sinit->s0{ havoc(ndet,  validity_ndet_)}
s0->s1{havoc()}

}


