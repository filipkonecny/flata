nts timesTwo;

main {
  in y : int;
  out t : int;
  initial s0;
  final sf;

  s0 -> sf { t' = rec(y) }

}


rec {
  in x : int;
  out z : int;
  initial s0;
  final sf;

  s0 -> s1 { x > 0 && havoc() }
  s1 -> s1b { z' = rec(x-1) && havoc(z) }
  s1b -> sf { z' = z + 2 && havoc(z) }
  s0 -> s2 { x < 0 && havoc() }
  s2 -> s2b { z' = rec(x+1) && havoc(z) }
  s2b -> sf { z' = z - 2 && havoc(z) }
  s0 -> sf { x = 0 && z' = 0 && havoc(z) }

}

