nts leq;

f {
  in x,y : int;
  out z : int;
  initial s0;
  final sf;

  s0 -> s1 { x > 0 && y > 0 && havoc() }
  s1 -> sf { z' = f(x-1,y-1) }
  s0 -> s2 { x < 0 && y < 0 && havoc() }
  s2 -> sf { z' = f(x+1,y+1) }
  s0 -> sf { x <= 0 && y >= 0 && z' = 1 && havoc() }
  s0 -> sf { x > 0 && y <= 0 && z' = 0 && havoc() }
  
}

main {
  in x,y : int;
  out z : int;
  initial s0;
  final sf;

  s0 -> sf { z'=f(x,y) }

}

